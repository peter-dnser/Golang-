Golang知识点：

1 匿名字段什么概念？场景？在一个结构体中对于每一种数据类型只能有一个匿名字段吗？
	
结构体可以包含一个或多个 匿名（或内嵌）字段，即这些字段没有显式的名字，只有字段的类型是必须的，此时类型就是字段的名字。匿名字段本身可以是一个结构体类型，即 结构体可以包含内嵌结构体。
Go 语言中的继承是通过内嵌或组合来实现的
在一个结构体中对于每一种数据类型只能有一个匿名字段。

2 当两个字段拥有相同的名字（可能是继承来的名字）时该怎么办呢？

外层名字会覆盖内层名字（但是两者的内存空间都保留），这提供了一种重载字段或方法的方式；
如果相同的名字在同一级别出现了两次，如果这个名字被程序使用了，将会引发一个错误（不使用没关系）。没有办法来解决这种问题引起的二义性，必须由程序员自己修正。

3 方法和函数的区别？
Go 方法是作用在接收者（receiver）上的一个函数，接收者是某种类型的变量。因此方法是一种特殊类型的函数。

4 方法的接收者类型大概是什么样的？
接收者类型可以是（几乎）任何类型，不仅仅是结构体类型：任何类型都可以有方法，甚至可以是函数类型，可以是 int、bool、string 或数组的别名类型。但是接收者不能是一个接口类型，因为接口是一个抽象定义，但是方法却是具体实现。

5 类型的代码和方法的代码必须一起吗？如果不一起，哪有什么限制吗？

类型的代码和绑定在它上面的方法的代码可以不放置在一起，它们可以存在在不同的源文件，唯一的要求是：它们必须是同一个包的

6 Golang有没有函数重载
因为方法是函数，所以同样的，不允许方法重载，即对于一个类型只能有一个给定名称的方法。但是如果基于接收者类型，是有重载的：具有同样名字的方法可以在 2 个或多个不同的接收者类型上存在

7  函数和方法的区别？
函数将变量作为参数：Function1(recv)
方法在变量上被调用：recv.Method1()， receiver_type 叫做 （接收者）基本类型，这个类型必须在和方法同样的包中被声明
方法没有和数据定义（结构体）混在一起：它们是正交的类型；表示（数据）和行为（方法）是独立的